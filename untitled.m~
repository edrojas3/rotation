files = dir('*c.mat');
pathresults = '~/Documents/proyectos/rotacion/matfiles/results_cesar/';
for i = 1:length(files)
    load(files(i).name)
    clc
    
    if size(results,2) < 11;
        continue
    else
        ai = unique(results(:,4));
        ar = unique(results(:,1))
        v = unique(results(:,9))
        t = unique(results(:,8))
        
        if ~(length(t) == 1)
            continue
        end
        
        %stims = struct('ar', ar, 'v', v, 't', t)
        
        c = input('tarea?:','s');
        
        switch c
            case 'r'
                copyfile(files(i).name, [pathresults, 'anguloFijo'])
            case 'v'
                copyfile(files(i).name, [pathresults, 'velFija'])
            case 't'
                copyfile(files(i).name, [pathresults, 'tiempoFijo'])
            case 'd'
                continue
        end
            
        
        
    end
    
        
        
    
end



%%
f = dir('~/Documents/proyectos/rotacion/matfiles/results_cesar/velFija/*.mat');

for i = 1:length(f);
   f(i).name 
   load(f(i).name) 
   psyFit(results, 'arotacion')
   
   pause
   clf
end 

%%

cfiles = '~/Documents/proyectos/rotacion/matfiles/results_cesar/';
dfiles = '~/Documents/proyectos/rotacion/matfiles/results_dewey/';

task = 'velFija';
datos = '14-Jul-2015-5d';
color = 'b';
load([dfiles, task, '/', datos])
d_velFija = psyFit(results, 'arotacion', 'c', color);

datos = '01-Aug-2015-6d';
color = 'r';
load([dfiles, task, '/', datos])
c_velFija = psyFit(results, 'arotacion', 'c', color);

x1 = d_velFija.numResp./d_velFija.numEnsayos;
x2 = c_velFija.numResp./c_velFija.numEnsayos;

[h, p, ks2stat] = kstest2(x1,x2);

velFija = struct('d_data', d_velFija,...
                'c_data', c_velFija,...
                'ksStat', [h, p, ks2stat]);

%%

task = 'anguloFijo';
datos = '21-May-2015-5d';
color = 'b';
load([dfiles, task, '/', datos])
d_anguloFijo = psyFit(results, 'v', 'c', color);

datos = '23-May-2015-1d';
color = 'r';
load([dfiles, task, '/', datos])
c_anguloFijo = psyFit(results, 'velocidad', 'c', color);

x1 = d_anguloFijo.numResp./d_anguloFijo.numEnsayos;
x2 = c_anguloFijo.numResp./c_anguloFijo.numEnsayos;

[h, p, ks2stat] = kstest2(x1,x2);

anguloFijo = struct('d_data', d_anguloFijo,...
                'c_data', c_anguloFijo,...
                'ksStat', [h, p, ks2stat]);

%%
task = 'tiempoFijo';
datos = '03-Jun-2015-2d';
color = 'b';
load([dfiles, task, '/', datos])
d_tiempoFijo = psyFit(results, 'arotacion', 'c', color);

datos = '07-Aug-2015-1c';
color = 'r';
load([cfiles, task, '/', datos])
c_tiempoFijo = psyFit(results, 'arotacion', 'c', color);

x1 = d_tiempoFijo.numResp./d_tiempoFijo.numEnsayos;
x2 = c_tiempoFijo.numResp./c_tiempoFijo.numEnsayos;

[h, p, ks2stat] = kstest2(x1,x2);

tiempoFijo = struct('d_data', d_tiempoFijo,...
                'c_data', c_tiempoFijo,...
                'ksStat', [h, p, ks2stat]);
            
            
            %%
s2 = zeros(length(velFija.c_data.numResp), 20);
ds = [0,1,2,3,3,3,3,2,1,0];
for i = 1:length(velFija.c_data.numResp)
    s2(i,:) = velFija.c_data.numResp(i)+1 + ds(i)*randn(1,20);
    s2(i,:) = floor(s2(i,:));
     
end
s2(s2(:,:) < 0) = 0;



%%
PF = @PAL_Logistic;
stimLevels = velFija.c_data.estimulos;
for i = 1:20
numResp = s2(:,i);
n = velFija.c_data.numEnsayos;
%color = [0.8,0.8,1];
color = [1,0.8,0.8];
searchGrid.alpha = [-0.5:.01:0.5];    %structure defining grid

searchGrid.gamma = [0:.01:.06];
searchGrid.lambda = [0:.01:.06];

paramsFree = [1 1 1 1]; 

[paramsValues,LL,exitflag] = PAL_PFML_Fit(stimLevels, numResp, n, ...
searchGrid, paramsFree, PF,'lapseLimits',[0 1],'guessLimits',...
[0 1]);

stimLevelsLine = stimLevels(1):0.1:stimLevels(end);
outcomes = PAL_Logistic(paramsValues,stimLevelsLine);

% plot(stimLevels,numResp./n, 'o', 'Color', color, 'MarkerFaceColor', color, 'LineWidth', 2, 'MarkerSize',5);
% hold on
plot(stimLevelsLine,outcomes, '-', 'Color', color, 'LineWidth',1);
hold on
end

ylabel('Probabilidad de contestar izquierda')
set(gca, 'ylim', [-0.05,1.05])

%%
plot(stimLevels,velFija.d_data.pResp,'ob', 'markerfacecolor','b','markersize',5)
plot(velFija.d_data.fitx,velFija.d_data.fity,'color','b','linewidth',2)
plot(stimLevels,velFija.c_data.pResp,'or', 'markerfacecolor','r','markersize',5)
plot(velFija.c_data.fitx,velFija.c_data.fity,'color','r','linewidth',2)
xlabel('Ángulo de rotación')

%%
PF = @PAL_Weibull;
% stimLevels = unique(stim);
% numResp = zeros(size(stimLevels));
% n = numResp;
% for i = 1:length(stimLevels)
%    resp = results(results(:,r) == stimLevels(i), 2);
%    numResp(i) = sum(resp == 1);
%    n(i) = length(resp);
% end
stimLevels = velFija.c_data.estimulos;
numResp = velFija.c_data.numResp;
n = velFija.c_data.numEnsayos;
color = 'r';

difer = zeros(size(stimLevels));
difer(1) = 1;
for i = 1:length(stimLevels)-1
   difer(i+1) = difer(i) + abs(stimLevels(i) - stimLevels(i+1));
end
stimLevels = difer;

searchGrid.alpha = length(stimLevels)/2:.01:1+length(stimLevels)/2;    %structure defining grid to
searchGrid.beta = 10.^[-1:.01:2]; %search for initial values
searchGrid.gamma = [0:.01:.06];
searchGrid.lambda = [0:.01:.06];

paramsFree = [1 1 1 1]; 

[paramsValues,LL,exitflag] = PAL_PFML_Fit(stimLevels, numResp, n, ...
searchGrid, paramsFree, PF,'lapseLimits',[0 1],'guessLimits',...
[0 1]);

stimLevelsLine = stimLevels(1):0.1:stimLevels(end);
outcomes = PAL_Weibull(paramsValues,stimLevelsLine);

plot(stimLevels,numResp./n, 'o', 'Color', color, 'MarkerFaceColor', color, 'LineWidth', 2, 'MarkerSize',5);
hold on
plot(stimLevelsLine,outcomes, '--', 'Color', color, 'MarkerFaceColor', color, 'LineWidth',2, 'MarkerSize', 5);
xlabel(xl)
ylabel('Probabilidad de contestar izquierda')
set(gca, 'ylim', [-0.05,1.05])