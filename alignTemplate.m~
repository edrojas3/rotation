matdir = 'C:\Users\eduardo\Documents\proyectos\rotacion\matfiles';
mono = 'dewey';
matid = 'd1606161035';
if isunix;
    addpath(genpath('/media/eduardo/OS/Users/eduardo/Documents/matlab'))
    matdir = '/media/eduardo/OS/Users/eduardo/Documents/proyectos/rotacion/matfiles';
    load([matdir, '/', mono, '/', matid])
else
    load([matdir, '\', mono, '\', matid])
end



a = -0.1;

angulos = [-0.1,-0.2,-0.4,-0.8,-1.6,-3.2,0.1,0.2,0.4,0.8,1.6,3.2];
anglist = round([e.trial.anguloRotacion]*10)/10;
trials = find(anglist == a);
signals = double(reshape([e.trial(trials).robSignal], 1000, length(trials)));

signal_norm = zeros(size(signals));
for s = 1:size(signal_norm,2)
   signal_norm(:,s)  = abs( ( signals(:,s) - mean(signals(1:200,s)) ) / std(signals(1:200,s)) );
end

signal_mean = mean(signal_norm,2);
slicing = [386,425];
% template = [ zeros( 1,slicing(1)-1 ), signal_mean(386:425)', zeros(1,999-slicing(2))*signal_mean(slicing(2))];
template = signal_mean(slicing(1):slicing(2));
% plot(template)

% CROSSCORRELATION

for s = 1:size(signal_norm,2)
    signal_filt = filtsignal(signal_norm(:,s));
    [coefs, lags] = xcorr(signal_filt, template);
    [val,I] = max(coefs);
    lagDiff = lags(I);
    timetemplate = lagDiff + (1:length(template));
    
    plot(signal_norm(:,s)); hold on
    plot(timetemplate, template, 'r')
    pause
    clf 
    
end

%%
signal_filt = filtsignal(signal_norm(:,s));
norm_fft = fft(signal_norm(:,s));
filt_fft = fft(signal_filt);

clf
subplot(2,1,1)
plot(signal_norm(:,s)); hold on
plot(signal_filt,'r')
subplot(2,1,2)
plot(abs(norm_fft), 'linewidth',3); hold on
plot(abs(filt_fft),'r')

%% My crosscorrelation
n = 1;
template_mean = mean(template);
for i = 1:1000 - length(template)
    
    section = signal_mean(i:i+length(template)-1,n);
    section_mean = mean(section);
    
    section_std = sqrt(sum(section - section_mean)^2);
    template_std = sqrt(sum(template)^2);
    D = section_std*template_std;

    section_demean = section - section_mean;
    template_demean = template - template_mean;
    section_by_template = section_demean .* template_demean;
    S = sum(section_by_template);

    r(i) = S/D;
end

[val,I] = max(r);
clf
plot(signal_mean); hold on
plot(I, signal_mean(I),'r*')


